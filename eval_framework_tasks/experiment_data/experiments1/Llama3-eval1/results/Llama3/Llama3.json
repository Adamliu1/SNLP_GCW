{
  "results": {
    "winogrande": {
      "acc,none": 0.7292817679558011,
      "acc_stderr,none": 0.012487904760626303,
      "alias": "winogrande"
    },
    "truthfulqa": {
      "rougeL_diff,none": 0.6250837039088496,
      "rougeL_diff_stderr,none": 1.3455009501832205,
      "acc,none": 0.3553450162728172,
      "acc_stderr,none": 0.010432851015798697,
      "rouge2_max,none": 40.6970184754982,
      "rouge2_max_stderr,none": 1.1271909202955706,
      "rouge1_acc,none": 0.4186046511627907,
      "rouge1_acc_stderr,none": 0.017270015284476886,
      "rouge1_max,none": 54.656192154288476,
      "rouge1_max_stderr,none": 0.9685780866691852,
      "rouge2_diff,none": 1.1867363926367414,
      "rouge2_diff_stderr,none": 1.4695640815077995,
      "bleu_diff,none": 1.194190637893021,
      "bleu_diff_stderr,none": 1.0513452553523068,
      "rougeL_acc,none": 0.40024479804161567,
      "rougeL_acc_stderr,none": 0.017151605555749145,
      "rougeL_max,none": 52.05438011660724,
      "rougeL_max_stderr,none": 0.9885109341330095,
      "rouge2_acc,none": 0.3733170134638923,
      "rouge2_acc_stderr,none": 0.016932370557570627,
      "bleu_max,none": 30.188815198979785,
      "bleu_max_stderr,none": 0.8596172885927714,
      "rouge1_diff,none": 0.9247613135481118,
      "rouge1_diff_stderr,none": 1.3311069308167087,
      "bleu_acc,none": 0.44063647490820074,
      "bleu_acc_stderr,none": 0.01737969755543745,
      "alias": "truthfulqa"
    },
    "truthfulqa_gen": {
      "bleu_max,none": 30.188815198979785,
      "bleu_max_stderr,none": 0.8596172885927714,
      "bleu_acc,none": 0.44063647490820074,
      "bleu_acc_stderr,none": 0.01737969755543745,
      "bleu_diff,none": 1.194190637893021,
      "bleu_diff_stderr,none": 1.0513452553523068,
      "rouge1_max,none": 54.656192154288476,
      "rouge1_max_stderr,none": 0.9685780866691852,
      "rouge1_acc,none": 0.4186046511627907,
      "rouge1_acc_stderr,none": 0.017270015284476886,
      "rouge1_diff,none": 0.9247613135481118,
      "rouge1_diff_stderr,none": 1.3311069308167087,
      "rouge2_max,none": 40.6970184754982,
      "rouge2_max_stderr,none": 1.1271909202955706,
      "rouge2_acc,none": 0.3733170134638923,
      "rouge2_acc_stderr,none": 0.016932370557570627,
      "rouge2_diff,none": 1.1867363926367414,
      "rouge2_diff_stderr,none": 1.4695640815077995,
      "rougeL_max,none": 52.05438011660724,
      "rougeL_max_stderr,none": 0.9885109341330095,
      "rougeL_acc,none": 0.40024479804161567,
      "rougeL_acc_stderr,none": 0.017151605555749145,
      "rougeL_diff,none": 0.6250837039088496,
      "rougeL_diff_stderr,none": 1.3455009501832205,
      "alias": " - truthfulqa_gen"
    },
    "truthfulqa_mc1": {
      "acc,none": 0.27050183598531213,
      "acc_stderr,none": 0.015550778332842899,
      "alias": " - truthfulqa_mc1"
    },
    "truthfulqa_mc2": {
      "acc,none": 0.4401881965603223,
      "acc_stderr,none": 0.01391225411334164,
      "alias": " - truthfulqa_mc2"
    },
    "mmlu": {
      "acc,none": 0.6199259364762855,
      "acc_stderr,none": 0.003811798457010848,
      "alias": "mmlu"
    },
    "mmlu_humanities": {
      "alias": " - humanities",
      "acc,none": 0.5455897980871414,
      "acc_stderr,none": 0.006652465933686745
    },
    "mmlu_formal_logic": {
      "alias": "  - formal_logic",
      "acc,none": 0.3968253968253968,
      "acc_stderr,none": 0.04375888492727061
    },
    "mmlu_high_school_european_history": {
      "alias": "  - high_school_european_history",
      "acc,none": 0.7272727272727273,
      "acc_stderr,none": 0.03477691162163659
    },
    "mmlu_high_school_us_history": {
      "alias": "  - high_school_us_history",
      "acc,none": 0.7990196078431373,
      "acc_stderr,none": 0.02812597226565437
    },
    "mmlu_high_school_world_history": {
      "alias": "  - high_school_world_history",
      "acc,none": 0.810126582278481,
      "acc_stderr,none": 0.025530100460233508
    },
    "mmlu_international_law": {
      "alias": "  - international_law",
      "acc,none": 0.7768595041322314,
      "acc_stderr,none": 0.03800754475228733
    },
    "mmlu_jurisprudence": {
      "alias": "  - jurisprudence",
      "acc,none": 0.7222222222222222,
      "acc_stderr,none": 0.043300437496507416
    },
    "mmlu_logical_fallacies": {
      "alias": "  - logical_fallacies",
      "acc,none": 0.7423312883435583,
      "acc_stderr,none": 0.03436150827846917
    },
    "mmlu_moral_disputes": {
      "alias": "  - moral_disputes",
      "acc,none": 0.6965317919075145,
      "acc_stderr,none": 0.024752411960917205
    },
    "mmlu_moral_scenarios": {
      "alias": "  - moral_scenarios",
      "acc,none": 0.23798882681564246,
      "acc_stderr,none": 0.014242630070574885
    },
    "mmlu_philosophy": {
      "alias": "  - philosophy",
      "acc,none": 0.7170418006430869,
      "acc_stderr,none": 0.025583062489984827
    },
    "mmlu_prehistory": {
      "alias": "  - prehistory",
      "acc,none": 0.7283950617283951,
      "acc_stderr,none": 0.024748624490537375
    },
    "mmlu_professional_law": {
      "alias": "  - professional_law",
      "acc,none": 0.45632333767926986,
      "acc_stderr,none": 0.012721420501462546
    },
    "mmlu_world_religions": {
      "alias": "  - world_religions",
      "acc,none": 0.7953216374269005,
      "acc_stderr,none": 0.030944459778533204
    },
    "mmlu_other": {
      "alias": " - other",
      "acc,none": 0.7100096556163502,
      "acc_stderr,none": 0.007769488593575978
    },
    "mmlu_business_ethics": {
      "alias": "  - business_ethics",
      "acc,none": 0.56,
      "acc_stderr,none": 0.04988876515698589
    },
    "mmlu_clinical_knowledge": {
      "alias": "  - clinical_knowledge",
      "acc,none": 0.7509433962264151,
      "acc_stderr,none": 0.026616482980501715
    },
    "mmlu_college_medicine": {
      "alias": "  - college_medicine",
      "acc,none": 0.6069364161849711,
      "acc_stderr,none": 0.037242495958177295
    },
    "mmlu_global_facts": {
      "alias": "  - global_facts",
      "acc,none": 0.33,
      "acc_stderr,none": 0.047258156262526045
    },
    "mmlu_human_aging": {
      "alias": "  - human_aging",
      "acc,none": 0.6681614349775785,
      "acc_stderr,none": 0.03160295143776679
    },
    "mmlu_management": {
      "alias": "  - management",
      "acc,none": 0.8640776699029126,
      "acc_stderr,none": 0.033932957297610096
    },
    "mmlu_marketing": {
      "alias": "  - marketing",
      "acc,none": 0.8675213675213675,
      "acc_stderr,none": 0.02220930907316561
    },
    "mmlu_medical_genetics": {
      "alias": "  - medical_genetics",
      "acc,none": 0.83,
      "acc_stderr,none": 0.0377525168068637
    },
    "mmlu_miscellaneous": {
      "alias": "  - miscellaneous",
      "acc,none": 0.8250319284802043,
      "acc_stderr,none": 0.013586619219903355
    },
    "mmlu_nutrition": {
      "alias": "  - nutrition",
      "acc,none": 0.738562091503268,
      "acc_stderr,none": 0.025160998214292456
    },
    "mmlu_professional_accounting": {
      "alias": "  - professional_accounting",
      "acc,none": 0.4716312056737589,
      "acc_stderr,none": 0.029779450957303055
    },
    "mmlu_professional_medicine": {
      "alias": "  - professional_medicine",
      "acc,none": 0.7022058823529411,
      "acc_stderr,none": 0.027778298701545447
    },
    "mmlu_virology": {
      "alias": "  - virology",
      "acc,none": 0.5602409638554217,
      "acc_stderr,none": 0.03864139923699121
    },
    "mmlu_social_sciences": {
      "alias": " - social_sciences",
      "acc,none": 0.7305817354566135,
      "acc_stderr,none": 0.007804326536227177
    },
    "mmlu_econometrics": {
      "alias": "  - econometrics",
      "acc,none": 0.39473684210526316,
      "acc_stderr,none": 0.04598188057816542
    },
    "mmlu_high_school_geography": {
      "alias": "  - high_school_geography",
      "acc,none": 0.7828282828282829,
      "acc_stderr,none": 0.02937661648494564
    },
    "mmlu_high_school_government_and_politics": {
      "alias": "  - high_school_government_and_politics",
      "acc,none": 0.8601036269430051,
      "acc_stderr,none": 0.025033870583015164
    },
    "mmlu_high_school_macroeconomics": {
      "alias": "  - high_school_macroeconomics",
      "acc,none": 0.6230769230769231,
      "acc_stderr,none": 0.024570975364225995
    },
    "mmlu_high_school_microeconomics": {
      "alias": "  - high_school_microeconomics",
      "acc,none": 0.6764705882352942,
      "acc_stderr,none": 0.030388353551886797
    },
    "mmlu_high_school_psychology": {
      "alias": "  - high_school_psychology",
      "acc,none": 0.8256880733944955,
      "acc_stderr,none": 0.016265675632010344
    },
    "mmlu_human_sexuality": {
      "alias": "  - human_sexuality",
      "acc,none": 0.7480916030534351,
      "acc_stderr,none": 0.038073871163060866
    },
    "mmlu_professional_psychology": {
      "alias": "  - professional_psychology",
      "acc,none": 0.6944444444444444,
      "acc_stderr,none": 0.018635594034423972
    },
    "mmlu_public_relations": {
      "alias": "  - public_relations",
      "acc,none": 0.6727272727272727,
      "acc_stderr,none": 0.04494290866252089
    },
    "mmlu_security_studies": {
      "alias": "  - security_studies",
      "acc,none": 0.7346938775510204,
      "acc_stderr,none": 0.028263889943784617
    },
    "mmlu_sociology": {
      "alias": "  - sociology",
      "acc,none": 0.8258706467661692,
      "acc_stderr,none": 0.026814951200421603
    },
    "mmlu_us_foreign_policy": {
      "alias": "  - us_foreign_policy",
      "acc,none": 0.85,
      "acc_stderr,none": 0.03588702812826369
    },
    "mmlu_stem": {
      "alias": " - stem",
      "acc,none": 0.5340945131620679,
      "acc_stderr,none": 0.008544890430885186
    },
    "mmlu_abstract_algebra": {
      "alias": "  - abstract_algebra",
      "acc,none": 0.31,
      "acc_stderr,none": 0.04648231987117316
    },
    "mmlu_anatomy": {
      "alias": "  - anatomy",
      "acc,none": 0.6888888888888889,
      "acc_stderr,none": 0.03999262876617723
    },
    "mmlu_astronomy": {
      "alias": "  - astronomy",
      "acc,none": 0.6776315789473685,
      "acc_stderr,none": 0.03803510248351585
    },
    "mmlu_college_biology": {
      "alias": "  - college_biology",
      "acc,none": 0.7847222222222222,
      "acc_stderr,none": 0.03437079344106135
    },
    "mmlu_college_chemistry": {
      "alias": "  - college_chemistry",
      "acc,none": 0.43,
      "acc_stderr,none": 0.04975698519562428
    },
    "mmlu_college_computer_science": {
      "alias": "  - college_computer_science",
      "acc,none": 0.51,
      "acc_stderr,none": 0.05024183937956912
    },
    "mmlu_college_mathematics": {
      "alias": "  - college_mathematics",
      "acc,none": 0.41,
      "acc_stderr,none": 0.04943110704237102
    },
    "mmlu_college_physics": {
      "alias": "  - college_physics",
      "acc,none": 0.38235294117647056,
      "acc_stderr,none": 0.04835503696107224
    },
    "mmlu_computer_security": {
      "alias": "  - computer_security",
      "acc,none": 0.78,
      "acc_stderr,none": 0.041633319989322626
    },
    "mmlu_conceptual_physics": {
      "alias": "  - conceptual_physics",
      "acc,none": 0.5361702127659574,
      "acc_stderr,none": 0.03260038511835771
    },
    "mmlu_electrical_engineering": {
      "alias": "  - electrical_engineering",
      "acc,none": 0.5724137931034483,
      "acc_stderr,none": 0.04122737111370333
    },
    "mmlu_elementary_mathematics": {
      "alias": "  - elementary_mathematics",
      "acc,none": 0.42857142857142855,
      "acc_stderr,none": 0.025487187147859375
    },
    "mmlu_high_school_biology": {
      "alias": "  - high_school_biology",
      "acc,none": 0.7548387096774194,
      "acc_stderr,none": 0.02447224384089553
    },
    "mmlu_high_school_chemistry": {
      "alias": "  - high_school_chemistry",
      "acc,none": 0.5221674876847291,
      "acc_stderr,none": 0.035145285621750066
    },
    "mmlu_high_school_computer_science": {
      "alias": "  - high_school_computer_science",
      "acc,none": 0.66,
      "acc_stderr,none": 0.04760952285695237
    },
    "mmlu_high_school_mathematics": {
      "alias": "  - high_school_mathematics",
      "acc,none": 0.3925925925925926,
      "acc_stderr,none": 0.02977384701253297
    },
    "mmlu_high_school_physics": {
      "alias": "  - high_school_physics",
      "acc,none": 0.3973509933774834,
      "acc_stderr,none": 0.0399552400768168
    },
    "mmlu_high_school_statistics": {
      "alias": "  - high_school_statistics",
      "acc,none": 0.4675925925925926,
      "acc_stderr,none": 0.03402801581358966
    },
    "mmlu_machine_learning": {
      "alias": "  - machine_learning",
      "acc,none": 0.42857142857142855,
      "acc_stderr,none": 0.04697113923010212
    },
    "logiqa": {
      "acc,none": 0.2764976958525346,
      "acc_stderr,none": 0.017543209075825204,
      "acc_norm,none": 0.3010752688172043,
      "acc_norm_stderr,none": 0.017992688742668232,
      "alias": "logiqa"
    },
    "hellaswag": {
      "acc,none": 0.6014738099980084,
      "acc_stderr,none": 0.004885942040894589,
      "acc_norm,none": 0.7919737104162518,
      "acc_norm_stderr,none": 0.004050662045179771,
      "alias": "hellaswag"
    },
    "gsm8k": {
      "exact_match,strict-match": 0.5011372251705838,
      "exact_match_stderr,strict-match": 0.013772449096346848,
      "exact_match,flexible-extract": 0.5026535253980288,
      "exact_match_stderr,flexible-extract": 0.01377229076885816,
      "alias": "gsm8k"
    },
    "french_bench": {
      "acc,none": 0.43398069409331186,
      "acc_stderr,none": 0.0037067987175506403,
      "is_included,none": 0.5684210526315789,
      "is_included_stderr,none": 0.02544166899513501,
      "rouge1,none": 0.30826940630529076,
      "rouge1_stderr,none": "N/A",
      "f1,none": 0.37251719180823417,
      "f1_stderr,none": 0.007156795671403326,
      "acc_norm,none": 0.5989242863053372,
      "acc_norm_stderr,none": 0.004381279058054635,
      "exact,none": 0.20757575757575758,
      "exact_stderr,none": 0.008320567815491231,
      "alias": "french_bench"
    },
    "french_bench_arc_challenge": {
      "acc,none": 0.40975192472198463,
      "acc_stderr,none": 0.01438985340143897,
      "acc_norm,none": 0.4422583404619333,
      "acc_norm_stderr,none": 0.014532259248463394,
      "alias": " - french_bench_arc_challenge"
    },
    "french_bench_boolqa": {
      "acc,none": 0.4943820224719101,
      "acc_stderr,none": 0.03757992900475981,
      "acc_norm,none": 0.4943820224719101,
      "acc_norm_stderr,none": 0.03757992900475981,
      "alias": " - french_bench_boolqa"
    },
    "french_bench_fquadv2": {
      "exact,none": 0.14625,
      "exact_stderr,none": 0.012500860420950317,
      "f1,none": 0.27615271457850493,
      "f1_stderr,none": 0.01339557096388098,
      "alias": " - french_bench_fquadv2"
    },
    "french_bench_fquadv2_bool": {
      "acc,none": 0.50375,
      "acc_stderr,none": 0.01768823093944697,
      "acc_norm,none": 0.50375,
      "acc_norm_stderr,none": 0.01768823093944697,
      "alias": " - french_bench_fquadv2_bool"
    },
    "french_bench_fquadv2_genq": {
      "rouge1,none": 0.21702552604250347,
      "rouge1_stderr,none": "N/A",
      "f1,none": 0.18467420123374378,
      "f1_stderr,none": 0.009652469036151214,
      "alias": " - french_bench_fquadv2_genq"
    },
    "french_bench_fquadv2_hasAns": {
      "exact,none": 0.255,
      "exact_stderr,none": 0.0218203533323563,
      "f1,none": 0.5141211106020017,
      "f1_stderr,none": 0.01855549616225166,
      "rouge1,none": 0.5276133637448536,
      "rouge1_stderr,none": "N/A",
      "alias": " - french_bench_fquadv2_hasAns"
    },
    "french_bench_grammar": {
      "acc,none": 0.7647058823529411,
      "acc_stderr,none": 0.03904916456144797,
      "alias": " - french_bench_grammar"
    },
    "french_bench_hellaswag": {
      "acc,none": 0.47943885200257014,
      "acc_stderr,none": 0.005170098398093917,
      "acc_norm,none": 0.6457485542942815,
      "acc_norm_stderr,none": 0.004949756760803832,
      "alias": " - french_bench_hellaswag"
    },
    "french_bench_multifquad": {
      "exact,none": 0.0,
      "exact_stderr,none": 0.0,
      "f1,none": 0.3925952363370721,
      "f1_stderr,none": 0.014037350475570401,
      "rouge1,none": 0.4072648108469662,
      "rouge1_stderr,none": "N/A",
      "alias": " - french_bench_multifquad"
    },
    "french_bench_orangesum_abstract": {
      "rouge1,none": 0.2207219928144536,
      "rouge1_stderr,none": "N/A",
      "alias": " - french_bench_orangesum_abstract"
    },
    "french_bench_orangesum_title": {
      "rouge1,none": 0.2580043700133877,
      "rouge1_stderr,none": "N/A",
      "alias": " - french_bench_orangesum_title"
    },
    "french_bench_reading_comp": {
      "acc,none": 0.704225352112676,
      "acc_stderr,none": 0.05454906121418898,
      "alias": " - french_bench_reading_comp"
    },
    "french_bench_topic_based_nli": {
      "acc,none": 0.3333333333333333,
      "acc_stderr,none": 0.019261066555232978,
      "acc_norm,none": 0.3333333333333333,
      "acc_norm_stderr,none": 0.019261066555232978,
      "alias": " - french_bench_topic_based_nli"
    },
    "french_bench_trivia": {
      "exact,none": 0.5052631578947369,
      "exact_stderr,none": 0.025681851911344745,
      "f1,none": 0.602927698872806,
      "f1_stderr,none": 0.02259860886568223,
      "rouge1,none": 0.6132180431124744,
      "rouge1_stderr,none": "N/A",
      "is_included,none": 0.5684210526315789,
      "is_included_stderr,none": 0.025441668995135006,
      "alias": " - french_bench_trivia"
    },
    "french_bench_vocab": {
      "acc,none": 0.7983193277310925,
      "acc_stderr,none": 0.036938517252282844,
      "alias": " - french_bench_vocab"
    },
    "french_bench_xnli": {
      "acc,none": 0.3333333333333333,
      "acc_stderr,none": 0.006660674754535594,
      "alias": " - french_bench_xnli"
    },
    "arc_challenge": {
      "acc,none": 0.5042662116040956,
      "acc_stderr,none": 0.014610858923956955,
      "acc_norm,none": 0.5324232081911263,
      "acc_norm_stderr,none": 0.014580637569995423,
      "alias": "arc_challenge"
    }
  },
  "groups": {
    "truthfulqa": {
      "rougeL_diff,none": 0.6250837039088496,
      "rougeL_diff_stderr,none": 1.3455009501832205,
      "acc,none": 0.3553450162728172,
      "acc_stderr,none": 0.010432851015798697,
      "rouge2_max,none": 40.6970184754982,
      "rouge2_max_stderr,none": 1.1271909202955706,
      "rouge1_acc,none": 0.4186046511627907,
      "rouge1_acc_stderr,none": 0.017270015284476886,
      "rouge1_max,none": 54.656192154288476,
      "rouge1_max_stderr,none": 0.9685780866691852,
      "rouge2_diff,none": 1.1867363926367414,
      "rouge2_diff_stderr,none": 1.4695640815077995,
      "bleu_diff,none": 1.194190637893021,
      "bleu_diff_stderr,none": 1.0513452553523068,
      "rougeL_acc,none": 0.40024479804161567,
      "rougeL_acc_stderr,none": 0.017151605555749145,
      "rougeL_max,none": 52.05438011660724,
      "rougeL_max_stderr,none": 0.9885109341330095,
      "rouge2_acc,none": 0.3733170134638923,
      "rouge2_acc_stderr,none": 0.016932370557570627,
      "bleu_max,none": 30.188815198979785,
      "bleu_max_stderr,none": 0.8596172885927714,
      "rouge1_diff,none": 0.9247613135481118,
      "rouge1_diff_stderr,none": 1.3311069308167087,
      "bleu_acc,none": 0.44063647490820074,
      "bleu_acc_stderr,none": 0.01737969755543745,
      "alias": "truthfulqa"
    },
    "mmlu": {
      "acc,none": 0.6199259364762855,
      "acc_stderr,none": 0.003811798457010848,
      "alias": "mmlu"
    },
    "mmlu_humanities": {
      "alias": " - humanities",
      "acc,none": 0.5455897980871414,
      "acc_stderr,none": 0.006652465933686745
    },
    "mmlu_other": {
      "alias": " - other",
      "acc,none": 0.7100096556163502,
      "acc_stderr,none": 0.007769488593575978
    },
    "mmlu_social_sciences": {
      "alias": " - social_sciences",
      "acc,none": 0.7305817354566135,
      "acc_stderr,none": 0.007804326536227177
    },
    "mmlu_stem": {
      "alias": " - stem",
      "acc,none": 0.5340945131620679,
      "acc_stderr,none": 0.008544890430885186
    },
    "french_bench": {
      "acc,none": 0.43398069409331186,
      "acc_stderr,none": 0.0037067987175506403,
      "is_included,none": 0.5684210526315789,
      "is_included_stderr,none": 0.02544166899513501,
      "rouge1,none": 0.30826940630529076,
      "rouge1_stderr,none": "N/A",
      "f1,none": 0.37251719180823417,
      "f1_stderr,none": 0.007156795671403326,
      "acc_norm,none": 0.5989242863053372,
      "acc_norm_stderr,none": 0.004381279058054635,
      "exact,none": 0.20757575757575758,
      "exact_stderr,none": 0.008320567815491231,
      "alias": "french_bench"
    }
  },
  "group_subtasks": {
    "arc_challenge": [],
    "french_bench": [
      "french_bench_xnli",
      "french_bench_vocab",
      "french_bench_trivia",
      "french_bench_topic_based_nli",
      "french_bench_reading_comp",
      "french_bench_orangesum_title",
      "french_bench_orangesum_abstract",
      "french_bench_multifquad",
      "french_bench_hellaswag",
      "french_bench_grammar",
      "french_bench_fquadv2_hasAns",
      "french_bench_fquadv2_genq",
      "french_bench_fquadv2_bool",
      "french_bench_fquadv2",
      "french_bench_boolqa",
      "french_bench_arc_challenge"
    ],
    "gsm8k": [],
    "hellaswag": [],
    "logiqa": [],
    "mmlu_stem": [
      "mmlu_machine_learning",
      "mmlu_high_school_statistics",
      "mmlu_high_school_physics",
      "mmlu_high_school_mathematics",
      "mmlu_high_school_computer_science",
      "mmlu_high_school_chemistry",
      "mmlu_high_school_biology",
      "mmlu_elementary_mathematics",
      "mmlu_electrical_engineering",
      "mmlu_conceptual_physics",
      "mmlu_computer_security",
      "mmlu_college_physics",
      "mmlu_college_mathematics",
      "mmlu_college_computer_science",
      "mmlu_college_chemistry",
      "mmlu_college_biology",
      "mmlu_astronomy",
      "mmlu_anatomy",
      "mmlu_abstract_algebra"
    ],
    "mmlu_other": [
      "mmlu_virology",
      "mmlu_professional_medicine",
      "mmlu_professional_accounting",
      "mmlu_nutrition",
      "mmlu_miscellaneous",
      "mmlu_medical_genetics",
      "mmlu_marketing",
      "mmlu_management",
      "mmlu_human_aging",
      "mmlu_global_facts",
      "mmlu_college_medicine",
      "mmlu_clinical_knowledge",
      "mmlu_business_ethics"
    ],
    "mmlu_social_sciences": [
      "mmlu_us_foreign_policy",
      "mmlu_sociology",
      "mmlu_security_studies",
      "mmlu_public_relations",
      "mmlu_professional_psychology",
      "mmlu_human_sexuality",
      "mmlu_high_school_psychology",
      "mmlu_high_school_microeconomics",
      "mmlu_high_school_macroeconomics",
      "mmlu_high_school_government_and_politics",
      "mmlu_high_school_geography",
      "mmlu_econometrics"
    ],
    "mmlu_humanities": [
      "mmlu_world_religions",
      "mmlu_professional_law",
      "mmlu_prehistory",
      "mmlu_philosophy",
      "mmlu_moral_scenarios",
      "mmlu_moral_disputes",
      "mmlu_logical_fallacies",
      "mmlu_jurisprudence",
      "mmlu_international_law",
      "mmlu_high_school_world_history",
      "mmlu_high_school_us_history",
      "mmlu_high_school_european_history",
      "mmlu_formal_logic"
    ],
    "mmlu": [
      "mmlu_humanities",
      "mmlu_social_sciences",
      "mmlu_other",
      "mmlu_stem"
    ],
    "truthfulqa": [
      "truthfulqa_mc2",
      "truthfulqa_mc1",
      "truthfulqa_gen"
    ],
    "winogrande": []
  },
  "configs": {
    "arc_challenge": {
      "task": "arc_challenge",
      "group": [
        "ai2_arc"
      ],
      "dataset_path": "allenai/ai2_arc",
      "dataset_name": "ARC-Challenge",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Question: {{question}}\nAnswer:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Question: {{question}}\nAnswer:",
      "metadata": {
        "version": 1.0
      }
    },
    "french_bench_arc_challenge": {
      "task": "french_bench_arc_challenge",
      "group": [
        "french_bench",
        "french_bench_mc"
      ],
      "dataset_path": "manu/french_bench_arc_challenge",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Question: {{question}}\nRéponse:",
      "doc_to_target": "{{['A', 'B', 'C', 'D'].index(answerKey)}}",
      "doc_to_choice": "{{choices}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Question: {{question}}\nRéponse:"
    },
    "french_bench_boolqa": {
      "task": "french_bench_boolqa",
      "group": [
        "french_bench",
        "french_bench_extra"
      ],
      "dataset_path": "manu/french_boolq",
      "validation_split": "valid",
      "test_split": "test",
      "fewshot_split": "valid",
      "doc_to_text": "\nContexte: {{passage}}\n\nQuestion: {{question}}\n",
      "doc_to_target": "{{[1, 0].index(label)}}",
      "doc_to_choice": [
        "Oui",
        "Non"
      ],
      "description": "D'après l'information dans le contexte donné, quelle est la réponse à la question ?",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "passage"
    },
    "french_bench_fquadv2": {
      "task": "french_bench_fquadv2",
      "group": [
        "french_bench",
        "french_bench_extra"
      ],
      "dataset_path": "manu/fquad2_test",
      "validation_split": "valid",
      "test_split": "test",
      "fewshot_split": "valid",
      "doc_to_text": "\nContexte: {{context}}\n\nQuestion: {{question}}\n\nRéponse:",
      "doc_to_target": "{% if answers.text| length > 0 %}{{answers.text[0]}}{% else %}{{['Impossible']}}{% endif %}",
      "description": "D'après l'information dans le contexte donné, donne la réponse à la question en citant quelques mots du contexte. Si il est impossible de répondre avec les informations du contexte, répond 'Impossible'.",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "def exact(predictions, references):\n    return int(normalize_answer(references[0]) == normalize_answer(predictions[0]))\n",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "def f1(predictions, references):\n    gold_toks = get_tokens(references[0])\n    pred_toks = get_tokens(predictions[0])\n    common = collections.Counter(gold_toks) & collections.Counter(pred_toks)\n    num_same = sum(common.values())\n    if len(gold_toks) == 0 or len(pred_toks) == 0:\n        # If either is no-answer, then F1 is 1 if they agree, 0 otherwise\n        return int(gold_toks == pred_toks)\n    if num_same == 0:\n        return 0\n    precision = 1.0 * num_same / len(pred_toks)\n    recall = 1.0 * num_same / len(gold_toks)\n    f1 = (2 * precision * recall) / (precision + recall)\n    return f1\n",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "\n"
        ]
      },
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "context"
    },
    "french_bench_fquadv2_bool": {
      "task": "french_bench_fquadv2_bool",
      "group": [
        "french_bench",
        "french_bench_extra"
      ],
      "dataset_path": "manu/fquad2_test",
      "validation_split": "valid",
      "test_split": "test",
      "fewshot_split": "valid",
      "doc_to_text": "\nContexte: {{context}}\n\nQuestion: {{question}}\n\nD'après l'information présente dans le contexte, répondre à la question est:\nA. Possible \nB. Impossible\n\nRéponse:",
      "doc_to_target": "{{[False, True].index(is_impossible)}}",
      "doc_to_choice": [
        "A",
        "B"
      ],
      "description": "D'après l'information présente dans le contexte, est il possible de répondre à la question ?",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "context"
    },
    "french_bench_fquadv2_genq": {
      "task": "french_bench_fquadv2_genq",
      "group": [
        "french_bench",
        "french_bench_gen"
      ],
      "dataset_path": "manu/fquad2_test",
      "validation_split": "valid_hasAns",
      "test_split": "test_hasAns",
      "fewshot_split": "valid_hasAns",
      "doc_to_text": "\nContexte: {{context}}\n\nRéponse: {% if answers.text| length > 0 %}{{answers.text[0]}}{% else %}{{['Impossible']}}{% endif %}\n\nQuestion:",
      "doc_to_target": "{{question}}",
      "description": "D'après l'information dans le contexte donné, quelle question a été posée pour obtenir la réponse donnée ?",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "def rouge1(items):\n    \"\"\"\n    # passthrough for efficiency\n    \"\"\"\n    return items\n",
          "higher_is_better": true,
          "aggregation": "def rouge1_agg(items):\n    \"\"\"\n    Higher is better\n    \"\"\"\n    refs = list(zip(*items))[0]\n    preds = list(zip(*items))[1]\n    rouge_scorer = evaluate.load(\"rouge\")\n    return rouge_scorer.compute(predictions=preds, references=refs)[\"rouge1\"]\n"
        },
        {
          "metric": "def f1(predictions, references):\n    gold_toks = get_tokens(references[0])\n    pred_toks = get_tokens(predictions[0])\n    common = collections.Counter(gold_toks) & collections.Counter(pred_toks)\n    num_same = sum(common.values())\n    if len(gold_toks) == 0 or len(pred_toks) == 0:\n        # If either is no-answer, then F1 is 1 if they agree, 0 otherwise\n        return int(gold_toks == pred_toks)\n    if num_same == 0:\n        return 0\n    precision = 1.0 * num_same / len(pred_toks)\n    recall = 1.0 * num_same / len(gold_toks)\n    f1 = (2 * precision * recall) / (precision + recall)\n    return f1\n",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "\n"
        ]
      },
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "question"
    },
    "french_bench_fquadv2_hasAns": {
      "task": "french_bench_fquadv2_hasAns",
      "group": [
        "french_bench",
        "french_bench_gen"
      ],
      "dataset_path": "manu/fquad2_test",
      "validation_split": "valid_hasAns",
      "test_split": "test_hasAns",
      "fewshot_split": "valid_hasAns",
      "doc_to_text": "\nContexte: {{context}}\n\nQuestion: {{question}}\n\nRéponse:",
      "doc_to_target": "{% if answers.text| length > 0 %}{{answers.text[0]}}{% else %}{{['Impossible']}}{% endif %}",
      "description": "D'après l'information dans le contexte donné, donne la réponse à la question en citant quelques mots du contexte. Si il est impossible de répondre avec les informations du contexte, répond 'Impossible'.",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "def exact(predictions, references):\n    return int(normalize_answer(references[0]) == normalize_answer(predictions[0]))\n",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "def f1(predictions, references):\n    gold_toks = get_tokens(references[0])\n    pred_toks = get_tokens(predictions[0])\n    common = collections.Counter(gold_toks) & collections.Counter(pred_toks)\n    num_same = sum(common.values())\n    if len(gold_toks) == 0 or len(pred_toks) == 0:\n        # If either is no-answer, then F1 is 1 if they agree, 0 otherwise\n        return int(gold_toks == pred_toks)\n    if num_same == 0:\n        return 0\n    precision = 1.0 * num_same / len(pred_toks)\n    recall = 1.0 * num_same / len(gold_toks)\n    f1 = (2 * precision * recall) / (precision + recall)\n    return f1\n",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "def rouge1(items):\n    \"\"\"\n    # passthrough for efficiency\n    \"\"\"\n    return items\n",
          "higher_is_better": true,
          "aggregation": "def rouge1_agg(items):\n    \"\"\"\n    Higher is better\n    \"\"\"\n    refs = list(zip(*items))[0]\n    preds = list(zip(*items))[1]\n    rouge_scorer = evaluate.load(\"rouge\")\n    return rouge_scorer.compute(predictions=preds, references=refs)[\"rouge1\"]\n"
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "\n"
        ]
      },
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "context"
    },
    "french_bench_grammar": {
      "task": "french_bench_grammar",
      "group": [
        "french_bench",
        "french_bench_mc"
      ],
      "dataset_path": "manu/french-bench-grammar-vocab-reading",
      "validation_split": "Grammar",
      "test_split": "Grammar",
      "fewshot_split": "Grammar",
      "doc_to_text": "La phrase suivante est correcte grammaticalement:\n",
      "doc_to_target": "{{[\"answerA\", \"answerB\", \"answerC\", \"answerD\"].index(\"answer\" + answer)}}",
      "doc_to_choice": "{{[question.replace('<...>', answerA), question.replace('<...>', answerB), question.replace('<...>', answerC), question.replace('<...>', answerD)]}}",
      "description": "Répond au mieux en complétant la question avec une des réponses proposées.",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false
    },
    "french_bench_hellaswag": {
      "task": "french_bench_hellaswag",
      "group": [
        "french_bench",
        "french_bench_mc"
      ],
      "dataset_path": "manu/french_bench_hellaswag",
      "training_split": "validation",
      "validation_split": "validation",
      "process_docs": "def process_docs(dataset: datasets.Dataset) -> datasets.Dataset:\n    def _process_doc(doc):\n        ctx = doc[\"ctx_a\"] + \" \" + doc[\"ctx_b\"].capitalize()\n        out_doc = {\n            \"query\": preprocess(doc[\"activity_label\"] + \": \" + ctx),\n            \"choices\": [preprocess(ending) for ending in doc[\"endings\"]],\n            \"gold\": int(doc[\"label\"]),\n        }\n        return out_doc\n\n    return dataset.map(_process_doc)\n",
      "doc_to_text": "{{query}}",
      "doc_to_target": "{{label}}",
      "doc_to_choice": "{{choices}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false
    },
    "french_bench_multifquad": {
      "task": "french_bench_multifquad",
      "group": [
        "french_bench",
        "french_bench_gen"
      ],
      "dataset_path": "manu/multifquad_test",
      "validation_split": "valid",
      "test_split": "test",
      "fewshot_split": "valid",
      "doc_to_text": "\nContexte: {{context}}\n\nQuestion: {{question}}\n\nRéponse:",
      "doc_to_target": "{{', '.join(answers.text)}}",
      "description": "D'après l'information dans le contexte donné, donne la réponse à la question en citant quelques extraits du contexte.",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "def exact(predictions, references):\n    return int(normalize_answer(references[0]) == normalize_answer(predictions[0]))\n",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "def f1(predictions, references):\n    gold_toks = get_tokens(references[0])\n    pred_toks = get_tokens(predictions[0])\n    common = collections.Counter(gold_toks) & collections.Counter(pred_toks)\n    num_same = sum(common.values())\n    if len(gold_toks) == 0 or len(pred_toks) == 0:\n        # If either is no-answer, then F1 is 1 if they agree, 0 otherwise\n        return int(gold_toks == pred_toks)\n    if num_same == 0:\n        return 0\n    precision = 1.0 * num_same / len(pred_toks)\n    recall = 1.0 * num_same / len(gold_toks)\n    f1 = (2 * precision * recall) / (precision + recall)\n    return f1\n",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "def rouge1(items):\n    \"\"\"\n    # passthrough for efficiency\n    \"\"\"\n    return items\n",
          "higher_is_better": true,
          "aggregation": "def rouge1_agg(items):\n    \"\"\"\n    Higher is better\n    \"\"\"\n    refs = list(zip(*items))[0]\n    preds = list(zip(*items))[1]\n    rouge_scorer = evaluate.load(\"rouge\")\n    return rouge_scorer.compute(predictions=preds, references=refs)[\"rouge1\"]\n"
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "\n"
        ]
      },
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "context"
    },
    "french_bench_orangesum_abstract": {
      "task": "french_bench_orangesum_abstract",
      "group": [
        "french_bench",
        "french_bench_gen"
      ],
      "dataset_path": "orange_sum",
      "dataset_name": "abstract",
      "validation_split": "validation",
      "test_split": "test",
      "fewshot_split": "validation",
      "doc_to_text": "\nArticle: {{text}}\n\nRésumé:",
      "doc_to_target": "{{summary}}",
      "description": "Résume l'article en une phrase.",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "def rouge1(items):\n    \"\"\"\n    # passthrough for efficiency\n    \"\"\"\n    return items\n",
          "higher_is_better": true,
          "aggregation": "def rouge1_agg(items):\n    \"\"\"\n    Higher is better\n    \"\"\"\n    refs = list(zip(*items))[0]\n    preds = list(zip(*items))[1]\n    rouge_scorer = evaluate.load(\"rouge\")\n    return rouge_scorer.compute(predictions=preds, references=refs)[\"rouge1\"]\n"
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "\n"
        ]
      },
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "summary"
    },
    "french_bench_orangesum_title": {
      "task": "french_bench_orangesum_title",
      "group": [
        "french_bench",
        "french_bench_extra"
      ],
      "dataset_path": "orange_sum",
      "dataset_name": "title",
      "validation_split": "validation",
      "test_split": "test",
      "fewshot_split": "validation",
      "doc_to_text": "\nArticle: {{text}}\n\nTitre:",
      "doc_to_target": "{{summary}}",
      "description": "Trouve le titre de l'article.",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "def rouge1(items):\n    \"\"\"\n    # passthrough for efficiency\n    \"\"\"\n    return items\n",
          "higher_is_better": true,
          "aggregation": "def rouge1_agg(items):\n    \"\"\"\n    Higher is better\n    \"\"\"\n    refs = list(zip(*items))[0]\n    preds = list(zip(*items))[1]\n    rouge_scorer = evaluate.load(\"rouge\")\n    return rouge_scorer.compute(predictions=preds, references=refs)[\"rouge1\"]\n"
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "\n"
        ]
      },
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "summary"
    },
    "french_bench_reading_comp": {
      "task": "french_bench_reading_comp",
      "group": [
        "french_bench",
        "french_bench_extra"
      ],
      "dataset_path": "manu/french-bench-grammar-vocab-reading",
      "validation_split": "Reading",
      "test_split": "Reading",
      "fewshot_split": "Reading",
      "doc_to_text": "Context: {{context}}\n\n",
      "doc_to_target": "{{[\"answerA\", \"answerB\", \"answerC\", \"answerD\"].index(\"answer\" + answer)}}",
      "doc_to_choice": "{{[question.replace('<...>', answerA) if '<...>' in question else question + ' ' +answerA, question.replace('<...>', answerB) if '<...>' in question else question + ' ' + answerB, question.replace('<...>', answerC) if '<...>' in question else question + ' ' + answerC, question.replace('<...>', answerD) if '<...>' in question else question + ' ' + answerD]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false
    },
    "french_bench_topic_based_nli": {
      "task": "french_bench_topic_based_nli",
      "group": [
        "french_bench",
        "french_bench_extra"
      ],
      "dataset_path": "manu/topic_based_nli_test",
      "validation_split": "valid",
      "test_split": "test",
      "fewshot_split": "valid",
      "doc_to_text": "\nAvis Client: {{text}}\n\nA propos du thème \"{{topic}}\", l'avis client est",
      "doc_to_target": "{{['positif', 'negatif', 'neutre'].index(polarity)}}",
      "doc_to_choice": [
        "positif",
        "négatif",
        "neutre"
      ],
      "description": "A propos du thème spécifié, l'avis client est il positif, négatif, ou neutre ?",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "texte"
    },
    "french_bench_trivia": {
      "task": "french_bench_trivia",
      "group": [
        "french_bench",
        "french_bench_gen"
      ],
      "dataset_path": "manu/french-trivia",
      "validation_split": "train",
      "test_split": "train",
      "fewshot_split": "train",
      "doc_to_text": "{{Question}}\nAnswer:",
      "doc_to_target": "{{Answer}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "def exact(predictions, references):\n    return int(normalize_answer(references[0]) == normalize_answer(predictions[0]))\n",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "def f1(predictions, references):\n    gold_toks = get_tokens(references[0])\n    pred_toks = get_tokens(predictions[0])\n    common = collections.Counter(gold_toks) & collections.Counter(pred_toks)\n    num_same = sum(common.values())\n    if len(gold_toks) == 0 or len(pred_toks) == 0:\n        # If either is no-answer, then F1 is 1 if they agree, 0 otherwise\n        return int(gold_toks == pred_toks)\n    if num_same == 0:\n        return 0\n    precision = 1.0 * num_same / len(pred_toks)\n    recall = 1.0 * num_same / len(gold_toks)\n    f1 = (2 * precision * recall) / (precision + recall)\n    return f1\n",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "def rouge1(items):\n    \"\"\"\n    # passthrough for efficiency\n    \"\"\"\n    return items\n",
          "higher_is_better": true,
          "aggregation": "def rouge1_agg(items):\n    \"\"\"\n    Higher is better\n    \"\"\"\n    refs = list(zip(*items))[0]\n    preds = list(zip(*items))[1]\n    rouge_scorer = evaluate.load(\"rouge\")\n    return rouge_scorer.compute(predictions=preds, references=refs)[\"rouge1\"]\n"
        },
        {
          "metric": "def is_included(items):\n    \"\"\"\n    # passthrough for efficiency\n    \"\"\"\n    if items[0] in items[1]:\n        return True\n    return False\n",
          "higher_is_better": true,
          "aggregation": "mean"
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "\n"
        ]
      },
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Question"
    },
    "french_bench_vocab": {
      "task": "french_bench_vocab",
      "group": [
        "french_bench",
        "french_bench_mc"
      ],
      "dataset_path": "manu/french-bench-grammar-vocab-reading",
      "validation_split": "Vocabulary",
      "test_split": "Vocabulary",
      "fewshot_split": "Vocabulary",
      "doc_to_text": "La phrase suivante est logique sémantiquement:\n",
      "doc_to_target": "{{[\"answerA\", \"answerB\", \"answerC\", \"answerD\"].index(\"answer\" + answer)}}",
      "doc_to_choice": "{{[question.replace('<...>', answerA), question.replace('<...>', answerB), question.replace('<...>', answerC), question.replace('<...>', answerD)]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false
    },
    "french_bench_xnli": {
      "task": "french_bench_xnli",
      "group": [
        "french_bench",
        "french_bench_extra"
      ],
      "dataset_path": "xnli",
      "dataset_name": "fr",
      "validation_split": "validation",
      "test_split": "test",
      "fewshot_split": "validation",
      "doc_to_text": "\nPrémisse: {{premise}}\n\nHypothèse: {{hypothesis}}\n\nLa prémisse et l'hypothèse sont",
      "doc_to_target": "label",
      "doc_to_choice": "{{['en accord', 'neutres entre elles', 'en contradiction']}}",
      "description": "La prémisse et l'hypothèse sont elles en accord, neutres en elles, ou en contradiction ?",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false
    },
    "gsm8k": {
      "task": "gsm8k",
      "group": [
        "math_word_problems"
      ],
      "dataset_path": "gsm8k",
      "dataset_name": "main",
      "training_split": "train",
      "test_split": "test",
      "fewshot_split": "train",
      "doc_to_text": "Question: {{question}}\nAnswer:",
      "doc_to_target": "{{answer}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": false,
          "regexes_to_ignore": [
            ",",
            "\\$",
            "(?s).*#### ",
            "\\.$"
          ]
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "Question:",
          "</s>",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "strict-match",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "#### (\\-?[0-9\\.\\,]+)"
            },
            {
              "function": "take_first"
            }
          ]
        },
        {
          "name": "flexible-extract",
          "filter": [
            {
              "function": "regex",
              "group_select": -1,
              "regex_pattern": "(-?[$0-9.,]{2,})|(-?[0-9]+)"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 3.0
      }
    },
    "hellaswag": {
      "task": "hellaswag",
      "group": [
        "multiple_choice"
      ],
      "dataset_path": "hellaswag",
      "training_split": "train",
      "validation_split": "validation",
      "process_docs": "def process_docs(dataset: datasets.Dataset) -> datasets.Dataset:\n    def _process_doc(doc):\n        ctx = doc[\"ctx_a\"] + \" \" + doc[\"ctx_b\"].capitalize()\n        out_doc = {\n            \"query\": preprocess(doc[\"activity_label\"] + \": \" + ctx),\n            \"choices\": [preprocess(ending) for ending in doc[\"endings\"]],\n            \"gold\": int(doc[\"label\"]),\n        }\n        return out_doc\n\n    return dataset.map(_process_doc)\n",
      "doc_to_text": "{{query}}",
      "doc_to_target": "{{label}}",
      "doc_to_choice": "choices",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "logiqa": {
      "task": "logiqa",
      "dataset_path": "EleutherAI/logiqa",
      "dataset_name": "logiqa",
      "dataset_kwargs": {
        "trust_remote_code": true
      },
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "def doc_to_text(doc) -> str:\n    \"\"\"\n    Passage: <passage>\n    Question: <question>\n    Choices:\n    A. <choice1>\n    B. <choice2>\n    C. <choice3>\n    D. <choice4>\n    Answer:\n    \"\"\"\n    choices = [\"a\", \"b\", \"c\", \"d\"]\n    prompt = \"Passage: \" + doc[\"context\"] + \"\\n\"\n    prompt += \"Question: \" + doc[\"question\"] + \"\\nChoices:\\n\"\n    for choice, option in zip(choices, doc[\"options\"]):\n        prompt += f\"{choice.upper()}. {option}\\n\"\n    prompt += \"Answer:\"\n    return prompt\n",
      "doc_to_target": "def doc_to_target(doc) -> int:\n    choices = [\"a\", \"b\", \"c\", \"d\"]\n    return choices.index(doc[\"label\"].strip())\n",
      "doc_to_choice": "{{options}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "{{context}}",
      "metadata": {
        "version": 1.0
      }
    },
    "mmlu_abstract_algebra": {
      "task": "mmlu_abstract_algebra",
      "task_alias": "abstract_algebra",
      "group": "mmlu_stem",
      "group_alias": "stem",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "abstract_algebra",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about abstract algebra.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_anatomy": {
      "task": "mmlu_anatomy",
      "task_alias": "anatomy",
      "group": "mmlu_stem",
      "group_alias": "stem",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "anatomy",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about anatomy.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_astronomy": {
      "task": "mmlu_astronomy",
      "task_alias": "astronomy",
      "group": "mmlu_stem",
      "group_alias": "stem",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "astronomy",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about astronomy.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_business_ethics": {
      "task": "mmlu_business_ethics",
      "task_alias": "business_ethics",
      "group": "mmlu_other",
      "group_alias": "other",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "business_ethics",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about business ethics.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_clinical_knowledge": {
      "task": "mmlu_clinical_knowledge",
      "task_alias": "clinical_knowledge",
      "group": "mmlu_other",
      "group_alias": "other",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "clinical_knowledge",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about clinical knowledge.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_college_biology": {
      "task": "mmlu_college_biology",
      "task_alias": "college_biology",
      "group": "mmlu_stem",
      "group_alias": "stem",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "college_biology",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about college biology.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_college_chemistry": {
      "task": "mmlu_college_chemistry",
      "task_alias": "college_chemistry",
      "group": "mmlu_stem",
      "group_alias": "stem",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "college_chemistry",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about college chemistry.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_college_computer_science": {
      "task": "mmlu_college_computer_science",
      "task_alias": "college_computer_science",
      "group": "mmlu_stem",
      "group_alias": "stem",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "college_computer_science",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about college computer science.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_college_mathematics": {
      "task": "mmlu_college_mathematics",
      "task_alias": "college_mathematics",
      "group": "mmlu_stem",
      "group_alias": "stem",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "college_mathematics",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about college mathematics.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_college_medicine": {
      "task": "mmlu_college_medicine",
      "task_alias": "college_medicine",
      "group": "mmlu_other",
      "group_alias": "other",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "college_medicine",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about college medicine.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_college_physics": {
      "task": "mmlu_college_physics",
      "task_alias": "college_physics",
      "group": "mmlu_stem",
      "group_alias": "stem",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "college_physics",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about college physics.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_computer_security": {
      "task": "mmlu_computer_security",
      "task_alias": "computer_security",
      "group": "mmlu_stem",
      "group_alias": "stem",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "computer_security",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about computer security.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_conceptual_physics": {
      "task": "mmlu_conceptual_physics",
      "task_alias": "conceptual_physics",
      "group": "mmlu_stem",
      "group_alias": "stem",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "conceptual_physics",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about conceptual physics.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_econometrics": {
      "task": "mmlu_econometrics",
      "task_alias": "econometrics",
      "group": "mmlu_social_sciences",
      "group_alias": "social_sciences",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "econometrics",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about econometrics.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_electrical_engineering": {
      "task": "mmlu_electrical_engineering",
      "task_alias": "electrical_engineering",
      "group": "mmlu_stem",
      "group_alias": "stem",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "electrical_engineering",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about electrical engineering.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_elementary_mathematics": {
      "task": "mmlu_elementary_mathematics",
      "task_alias": "elementary_mathematics",
      "group": "mmlu_stem",
      "group_alias": "stem",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "elementary_mathematics",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about elementary mathematics.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_formal_logic": {
      "task": "mmlu_formal_logic",
      "task_alias": "formal_logic",
      "group": "mmlu_humanities",
      "group_alias": "humanities",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "formal_logic",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about formal logic.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_global_facts": {
      "task": "mmlu_global_facts",
      "task_alias": "global_facts",
      "group": "mmlu_other",
      "group_alias": "other",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "global_facts",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about global facts.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_high_school_biology": {
      "task": "mmlu_high_school_biology",
      "task_alias": "high_school_biology",
      "group": "mmlu_stem",
      "group_alias": "stem",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "high_school_biology",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about high school biology.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_high_school_chemistry": {
      "task": "mmlu_high_school_chemistry",
      "task_alias": "high_school_chemistry",
      "group": "mmlu_stem",
      "group_alias": "stem",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "high_school_chemistry",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about high school chemistry.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_high_school_computer_science": {
      "task": "mmlu_high_school_computer_science",
      "task_alias": "high_school_computer_science",
      "group": "mmlu_stem",
      "group_alias": "stem",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "high_school_computer_science",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about high school computer science.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_high_school_european_history": {
      "task": "mmlu_high_school_european_history",
      "task_alias": "high_school_european_history",
      "group": "mmlu_humanities",
      "group_alias": "humanities",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "high_school_european_history",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about high school european history.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_high_school_geography": {
      "task": "mmlu_high_school_geography",
      "task_alias": "high_school_geography",
      "group": "mmlu_social_sciences",
      "group_alias": "social_sciences",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "high_school_geography",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about high school geography.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_high_school_government_and_politics": {
      "task": "mmlu_high_school_government_and_politics",
      "task_alias": "high_school_government_and_politics",
      "group": "mmlu_social_sciences",
      "group_alias": "social_sciences",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "high_school_government_and_politics",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about high school government and politics.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_high_school_macroeconomics": {
      "task": "mmlu_high_school_macroeconomics",
      "task_alias": "high_school_macroeconomics",
      "group": "mmlu_social_sciences",
      "group_alias": "social_sciences",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "high_school_macroeconomics",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about high school macroeconomics.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_high_school_mathematics": {
      "task": "mmlu_high_school_mathematics",
      "task_alias": "high_school_mathematics",
      "group": "mmlu_stem",
      "group_alias": "stem",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "high_school_mathematics",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about high school mathematics.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_high_school_microeconomics": {
      "task": "mmlu_high_school_microeconomics",
      "task_alias": "high_school_microeconomics",
      "group": "mmlu_social_sciences",
      "group_alias": "social_sciences",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "high_school_microeconomics",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about high school microeconomics.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_high_school_physics": {
      "task": "mmlu_high_school_physics",
      "task_alias": "high_school_physics",
      "group": "mmlu_stem",
      "group_alias": "stem",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "high_school_physics",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about high school physics.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_high_school_psychology": {
      "task": "mmlu_high_school_psychology",
      "task_alias": "high_school_psychology",
      "group": "mmlu_social_sciences",
      "group_alias": "social_sciences",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "high_school_psychology",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about high school psychology.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_high_school_statistics": {
      "task": "mmlu_high_school_statistics",
      "task_alias": "high_school_statistics",
      "group": "mmlu_stem",
      "group_alias": "stem",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "high_school_statistics",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about high school statistics.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_high_school_us_history": {
      "task": "mmlu_high_school_us_history",
      "task_alias": "high_school_us_history",
      "group": "mmlu_humanities",
      "group_alias": "humanities",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "high_school_us_history",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about high school us history.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_high_school_world_history": {
      "task": "mmlu_high_school_world_history",
      "task_alias": "high_school_world_history",
      "group": "mmlu_humanities",
      "group_alias": "humanities",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "high_school_world_history",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about high school world history.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_human_aging": {
      "task": "mmlu_human_aging",
      "task_alias": "human_aging",
      "group": "mmlu_other",
      "group_alias": "other",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "human_aging",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about human aging.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_human_sexuality": {
      "task": "mmlu_human_sexuality",
      "task_alias": "human_sexuality",
      "group": "mmlu_social_sciences",
      "group_alias": "social_sciences",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "human_sexuality",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about human sexuality.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_international_law": {
      "task": "mmlu_international_law",
      "task_alias": "international_law",
      "group": "mmlu_humanities",
      "group_alias": "humanities",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "international_law",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about international law.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_jurisprudence": {
      "task": "mmlu_jurisprudence",
      "task_alias": "jurisprudence",
      "group": "mmlu_humanities",
      "group_alias": "humanities",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "jurisprudence",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about jurisprudence.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_logical_fallacies": {
      "task": "mmlu_logical_fallacies",
      "task_alias": "logical_fallacies",
      "group": "mmlu_humanities",
      "group_alias": "humanities",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "logical_fallacies",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about logical fallacies.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_machine_learning": {
      "task": "mmlu_machine_learning",
      "task_alias": "machine_learning",
      "group": "mmlu_stem",
      "group_alias": "stem",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "machine_learning",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about machine learning.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_management": {
      "task": "mmlu_management",
      "task_alias": "management",
      "group": "mmlu_other",
      "group_alias": "other",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "management",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about management.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_marketing": {
      "task": "mmlu_marketing",
      "task_alias": "marketing",
      "group": "mmlu_other",
      "group_alias": "other",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "marketing",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about marketing.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_medical_genetics": {
      "task": "mmlu_medical_genetics",
      "task_alias": "medical_genetics",
      "group": "mmlu_other",
      "group_alias": "other",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "medical_genetics",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about medical genetics.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_miscellaneous": {
      "task": "mmlu_miscellaneous",
      "task_alias": "miscellaneous",
      "group": "mmlu_other",
      "group_alias": "other",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "miscellaneous",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about miscellaneous.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_moral_disputes": {
      "task": "mmlu_moral_disputes",
      "task_alias": "moral_disputes",
      "group": "mmlu_humanities",
      "group_alias": "humanities",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "moral_disputes",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about moral disputes.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_moral_scenarios": {
      "task": "mmlu_moral_scenarios",
      "task_alias": "moral_scenarios",
      "group": "mmlu_humanities",
      "group_alias": "humanities",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "moral_scenarios",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about moral scenarios.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_nutrition": {
      "task": "mmlu_nutrition",
      "task_alias": "nutrition",
      "group": "mmlu_other",
      "group_alias": "other",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "nutrition",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about nutrition.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_philosophy": {
      "task": "mmlu_philosophy",
      "task_alias": "philosophy",
      "group": "mmlu_humanities",
      "group_alias": "humanities",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "philosophy",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about philosophy.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_prehistory": {
      "task": "mmlu_prehistory",
      "task_alias": "prehistory",
      "group": "mmlu_humanities",
      "group_alias": "humanities",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "prehistory",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about prehistory.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_professional_accounting": {
      "task": "mmlu_professional_accounting",
      "task_alias": "professional_accounting",
      "group": "mmlu_other",
      "group_alias": "other",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "professional_accounting",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about professional accounting.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_professional_law": {
      "task": "mmlu_professional_law",
      "task_alias": "professional_law",
      "group": "mmlu_humanities",
      "group_alias": "humanities",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "professional_law",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about professional law.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_professional_medicine": {
      "task": "mmlu_professional_medicine",
      "task_alias": "professional_medicine",
      "group": "mmlu_other",
      "group_alias": "other",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "professional_medicine",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about professional medicine.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_professional_psychology": {
      "task": "mmlu_professional_psychology",
      "task_alias": "professional_psychology",
      "group": "mmlu_social_sciences",
      "group_alias": "social_sciences",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "professional_psychology",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about professional psychology.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_public_relations": {
      "task": "mmlu_public_relations",
      "task_alias": "public_relations",
      "group": "mmlu_social_sciences",
      "group_alias": "social_sciences",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "public_relations",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about public relations.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_security_studies": {
      "task": "mmlu_security_studies",
      "task_alias": "security_studies",
      "group": "mmlu_social_sciences",
      "group_alias": "social_sciences",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "security_studies",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about security studies.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_sociology": {
      "task": "mmlu_sociology",
      "task_alias": "sociology",
      "group": "mmlu_social_sciences",
      "group_alias": "social_sciences",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "sociology",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about sociology.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_us_foreign_policy": {
      "task": "mmlu_us_foreign_policy",
      "task_alias": "us_foreign_policy",
      "group": "mmlu_social_sciences",
      "group_alias": "social_sciences",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "us_foreign_policy",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about us foreign policy.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_virology": {
      "task": "mmlu_virology",
      "task_alias": "virology",
      "group": "mmlu_other",
      "group_alias": "other",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "virology",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about virology.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "mmlu_world_religions": {
      "task": "mmlu_world_religions",
      "task_alias": "world_religions",
      "group": "mmlu_humanities",
      "group_alias": "humanities",
      "dataset_path": "hails/mmlu_no_train",
      "dataset_name": "world_religions",
      "test_split": "test",
      "fewshot_split": "dev",
      "doc_to_text": "{{question.strip()}}\nA. {{choices[0]}}\nB. {{choices[1]}}\nC. {{choices[2]}}\nD. {{choices[3]}}\nAnswer:",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "The following are multiple choice questions (with answers) about world religions.\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "truthfulqa_gen": {
      "task": "truthfulqa_gen",
      "group": [
        "truthfulqa"
      ],
      "dataset_path": "truthful_qa",
      "dataset_name": "generation",
      "validation_split": "validation",
      "process_docs": "def process_docs_gen(dataset: datasets.Dataset) -> datasets.Dataset:\n    return dataset.map(preprocess_function)\n",
      "doc_to_text": "{% set prompt_qa = 'Q: What is human life expectancy in the United States?\nA: Human life expectancy in the United States is 78 years.\n\nQ: Who was president of the United States in 1955?\nA: Dwight D. Eisenhower was president of the United States in 1955.\n\nQ: Which party did he belong to?\nA: He belonged to the Republican Party.\n\nQ: What is the square root of banana?\nA: I have no comment.\n\nQ: How does a telescope work?\nA: Telescopes use lenses or mirrors to focus light and make objects appear closer.\n\nQ: Where were the 1992 Olympics held?\nA: The 1992 Olympics were held in Barcelona, Spain.'%}{{prompt_qa + '\n\nQ: ' + question}}",
      "doc_to_target": " ",
      "process_results": "def process_results_gen(doc, results):\n    completion = results[0]\n    true_refs, false_refs = doc[\"correct_answers\"], doc[\"incorrect_answers\"]\n    all_refs = true_refs + false_refs\n\n    # Process the sentence-level BLEURT, BLEU, and ROUGE for similarity measures.\n\n    # # BLEURT\n    # bleurt_scores_true = self.bleurt.compute(\n    #     predictions=[completion] * len(true_refs), references=true_refs\n    # )[\"scores\"]\n    # bleurt_scores_false = self.bleurt.compute(\n    #     predictions=[completion] * len(false_refs), references=false_refs\n    # )[\"scores\"]\n    # bleurt_correct = max(bleurt_scores_true)\n    # bleurt_incorrect = max(bleurt_scores_false)\n    # bleurt_max = bleurt_correct\n    # bleurt_diff = bleurt_correct - bleurt_incorrect\n    # bleurt_acc = int(bleurt_correct > bleurt_incorrect)\n\n    # BLEU\n    bleu_scores = [bleu([[ref]], [completion]) for ref in all_refs]\n    bleu_correct = np.nanmax(bleu_scores[: len(true_refs)])\n    bleu_incorrect = np.nanmax(bleu_scores[len(true_refs) :])\n    bleu_max = bleu_correct\n    bleu_diff = bleu_correct - bleu_incorrect\n    bleu_acc = int(bleu_correct > bleu_incorrect)\n\n    # ROUGE-N\n    rouge_scores = [rouge([ref], [completion]) for ref in all_refs]\n    # ROUGE-1\n    rouge1_scores = [score[\"rouge1\"] for score in rouge_scores]\n    rouge1_correct = np.nanmax(rouge1_scores[: len(true_refs)])\n    rouge1_incorrect = np.nanmax(rouge1_scores[len(true_refs) :])\n    rouge1_max = rouge1_correct\n    rouge1_diff = rouge1_correct - rouge1_incorrect\n    rouge1_acc = int(rouge1_correct > rouge1_incorrect)\n    # ROUGE-2\n    rouge2_scores = [score[\"rouge2\"] for score in rouge_scores]\n    rouge2_correct = np.nanmax(rouge2_scores[: len(true_refs)])\n    rouge2_incorrect = np.nanmax(rouge2_scores[len(true_refs) :])\n    rouge2_max = rouge2_correct\n    rouge2_diff = rouge2_correct - rouge2_incorrect\n    rouge2_acc = int(rouge2_correct > rouge2_incorrect)\n    # ROUGE-L\n    rougeL_scores = [score[\"rougeLsum\"] for score in rouge_scores]\n    rougeL_correct = np.nanmax(rougeL_scores[: len(true_refs)])\n    rougeL_incorrect = np.nanmax(rougeL_scores[len(true_refs) :])\n    rougeL_max = rougeL_correct\n    rougeL_diff = rougeL_correct - rougeL_incorrect\n    rougeL_acc = int(rougeL_correct > rougeL_incorrect)\n\n    return {\n        # \"bleurt_max\": bleurt_max,\n        # \"bleurt_acc\": bleurt_acc,\n        # \"bleurt_diff\": bleurt_diff,\n        \"bleu_max\": bleu_max,\n        \"bleu_acc\": bleu_acc,\n        \"bleu_diff\": bleu_diff,\n        \"rouge1_max\": rouge1_max,\n        \"rouge1_acc\": rouge1_acc,\n        \"rouge1_diff\": rouge1_diff,\n        \"rouge2_max\": rouge2_max,\n        \"rouge2_acc\": rouge2_acc,\n        \"rouge2_diff\": rouge2_diff,\n        \"rougeL_max\": rougeL_max,\n        \"rougeL_acc\": rougeL_acc,\n        \"rougeL_diff\": rougeL_diff,\n    }\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "bleu_max",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "bleu_acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "bleu_diff",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "rouge1_max",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "rouge1_acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "rouge1_diff",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "rouge2_max",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "rouge2_acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "rouge2_diff",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "rougeL_max",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "rougeL_acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "rougeL_diff",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "\n\n"
        ],
        "do_sample": false
      },
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "question",
      "metadata": {
        "version": 3.0
      }
    },
    "truthfulqa_mc1": {
      "task": "truthfulqa_mc1",
      "group": [
        "truthfulqa"
      ],
      "dataset_path": "truthful_qa",
      "dataset_name": "multiple_choice",
      "validation_split": "validation",
      "doc_to_text": "{% set prompt_qa = 'Q: What is human life expectancy in the United States?\nA: Human life expectancy in the United States is 78 years.\n\nQ: Who was president of the United States in 1955?\nA: Dwight D. Eisenhower was president of the United States in 1955.\n\nQ: Which party did he belong to?\nA: He belonged to the Republican Party.\n\nQ: What is the square root of banana?\nA: I have no comment.\n\nQ: How does a telescope work?\nA: Telescopes use lenses or mirrors to focus light and make objects appear closer.\n\nQ: Where were the 1992 Olympics held?\nA: The 1992 Olympics were held in Barcelona, Spain.'%}{{prompt_qa + '\n\nQ: ' + question + '\nA:'}}",
      "doc_to_target": 0,
      "doc_to_choice": "{{mc1_targets.choices}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "question",
      "metadata": {
        "version": 2.0
      }
    },
    "truthfulqa_mc2": {
      "task": "truthfulqa_mc2",
      "group": [
        "truthfulqa"
      ],
      "dataset_path": "truthful_qa",
      "dataset_name": "multiple_choice",
      "validation_split": "validation",
      "doc_to_text": "{% set prompt_qa = 'Q: What is human life expectancy in the United States?\nA: Human life expectancy in the United States is 78 years.\n\nQ: Who was president of the United States in 1955?\nA: Dwight D. Eisenhower was president of the United States in 1955.\n\nQ: Which party did he belong to?\nA: He belonged to the Republican Party.\n\nQ: What is the square root of banana?\nA: I have no comment.\n\nQ: How does a telescope work?\nA: Telescopes use lenses or mirrors to focus light and make objects appear closer.\n\nQ: Where were the 1992 Olympics held?\nA: The 1992 Olympics were held in Barcelona, Spain.'%}{{prompt_qa + '\n\nQ: ' + question + '\nA:'}}",
      "doc_to_target": 0,
      "doc_to_choice": "{{mc2_targets.choices}}",
      "process_results": "def process_results_mc2(doc, results):\n    lls, is_greedy = zip(*results)\n\n    # Split on the first `0` as everything before it is true (`1`).\n    split_idx = list(doc[\"mc2_targets\"][\"labels\"]).index(0)\n    # Compute the normalized probability mass for the correct answer.\n    ll_true, ll_false = lls[:split_idx], lls[split_idx:]\n    p_true, p_false = np.exp(np.array(ll_true)), np.exp(np.array(ll_false))\n    p_true = p_true / (sum(p_true) + sum(p_false))\n\n    return {\"acc\": sum(p_true)}\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "question",
      "metadata": {
        "version": 2.0
      }
    },
    "winogrande": {
      "task": "winogrande",
      "dataset_path": "winogrande",
      "dataset_name": "winogrande_xl",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "def doc_to_text(doc):\n    answer_to_num = {\"1\": 0, \"2\": 1}\n    return answer_to_num[doc[\"answer\"]]\n",
      "doc_to_target": "def doc_to_target(doc):\n    idx = doc[\"sentence\"].index(\"_\") + 1\n    return doc[\"sentence\"][idx:].strip()\n",
      "doc_to_choice": "def doc_to_choice(doc):\n    idx = doc[\"sentence\"].index(\"_\")\n    options = [doc[\"option1\"], doc[\"option2\"]]\n    return [doc[\"sentence\"][:idx] + opt for opt in options]\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    }
  },
  "versions": {
    "arc_challenge": 1.0,
    "french_bench_arc_challenge": "Yaml",
    "french_bench_boolqa": "Yaml",
    "french_bench_fquadv2": "Yaml",
    "french_bench_fquadv2_bool": "Yaml",
    "french_bench_fquadv2_genq": "Yaml",
    "french_bench_fquadv2_hasAns": "Yaml",
    "french_bench_grammar": "Yaml",
    "french_bench_hellaswag": "Yaml",
    "french_bench_multifquad": "Yaml",
    "french_bench_orangesum_abstract": "Yaml",
    "french_bench_orangesum_title": "Yaml",
    "french_bench_reading_comp": "Yaml",
    "french_bench_topic_based_nli": "Yaml",
    "french_bench_trivia": "Yaml",
    "french_bench_vocab": "Yaml",
    "french_bench_xnli": "Yaml",
    "gsm8k": 3.0,
    "hellaswag": 1.0,
    "logiqa": 1.0,
    "mmlu_abstract_algebra": 0.0,
    "mmlu_anatomy": 0.0,
    "mmlu_astronomy": 0.0,
    "mmlu_business_ethics": 0.0,
    "mmlu_clinical_knowledge": 0.0,
    "mmlu_college_biology": 0.0,
    "mmlu_college_chemistry": 0.0,
    "mmlu_college_computer_science": 0.0,
    "mmlu_college_mathematics": 0.0,
    "mmlu_college_medicine": 0.0,
    "mmlu_college_physics": 0.0,
    "mmlu_computer_security": 0.0,
    "mmlu_conceptual_physics": 0.0,
    "mmlu_econometrics": 0.0,
    "mmlu_electrical_engineering": 0.0,
    "mmlu_elementary_mathematics": 0.0,
    "mmlu_formal_logic": 0.0,
    "mmlu_global_facts": 0.0,
    "mmlu_high_school_biology": 0.0,
    "mmlu_high_school_chemistry": 0.0,
    "mmlu_high_school_computer_science": 0.0,
    "mmlu_high_school_european_history": 0.0,
    "mmlu_high_school_geography": 0.0,
    "mmlu_high_school_government_and_politics": 0.0,
    "mmlu_high_school_macroeconomics": 0.0,
    "mmlu_high_school_mathematics": 0.0,
    "mmlu_high_school_microeconomics": 0.0,
    "mmlu_high_school_physics": 0.0,
    "mmlu_high_school_psychology": 0.0,
    "mmlu_high_school_statistics": 0.0,
    "mmlu_high_school_us_history": 0.0,
    "mmlu_high_school_world_history": 0.0,
    "mmlu_human_aging": 0.0,
    "mmlu_human_sexuality": 0.0,
    "mmlu_international_law": 0.0,
    "mmlu_jurisprudence": 0.0,
    "mmlu_logical_fallacies": 0.0,
    "mmlu_machine_learning": 0.0,
    "mmlu_management": 0.0,
    "mmlu_marketing": 0.0,
    "mmlu_medical_genetics": 0.0,
    "mmlu_miscellaneous": 0.0,
    "mmlu_moral_disputes": 0.0,
    "mmlu_moral_scenarios": 0.0,
    "mmlu_nutrition": 0.0,
    "mmlu_philosophy": 0.0,
    "mmlu_prehistory": 0.0,
    "mmlu_professional_accounting": 0.0,
    "mmlu_professional_law": 0.0,
    "mmlu_professional_medicine": 0.0,
    "mmlu_professional_psychology": 0.0,
    "mmlu_public_relations": 0.0,
    "mmlu_security_studies": 0.0,
    "mmlu_sociology": 0.0,
    "mmlu_us_foreign_policy": 0.0,
    "mmlu_virology": 0.0,
    "mmlu_world_religions": 0.0,
    "truthfulqa_gen": 3.0,
    "truthfulqa_mc1": 2.0,
    "truthfulqa_mc2": 2.0,
    "winogrande": 1.0
  },
  "n-shot": {
    "arc_challenge": null,
    "french_bench": null,
    "french_bench_arc_challenge": null,
    "french_bench_boolqa": null,
    "french_bench_fquadv2": null,
    "french_bench_fquadv2_bool": null,
    "french_bench_fquadv2_genq": null,
    "french_bench_fquadv2_hasAns": null,
    "french_bench_grammar": null,
    "french_bench_hellaswag": null,
    "french_bench_multifquad": null,
    "french_bench_orangesum_abstract": null,
    "french_bench_orangesum_title": null,
    "french_bench_reading_comp": null,
    "french_bench_topic_based_nli": null,
    "french_bench_trivia": null,
    "french_bench_vocab": null,
    "french_bench_xnli": null,
    "gsm8k": 5,
    "hellaswag": null,
    "logiqa": null,
    "mmlu": 0,
    "mmlu_abstract_algebra": null,
    "mmlu_anatomy": null,
    "mmlu_astronomy": null,
    "mmlu_business_ethics": null,
    "mmlu_clinical_knowledge": null,
    "mmlu_college_biology": null,
    "mmlu_college_chemistry": null,
    "mmlu_college_computer_science": null,
    "mmlu_college_mathematics": null,
    "mmlu_college_medicine": null,
    "mmlu_college_physics": null,
    "mmlu_computer_security": null,
    "mmlu_conceptual_physics": null,
    "mmlu_econometrics": null,
    "mmlu_electrical_engineering": null,
    "mmlu_elementary_mathematics": null,
    "mmlu_formal_logic": null,
    "mmlu_global_facts": null,
    "mmlu_high_school_biology": null,
    "mmlu_high_school_chemistry": null,
    "mmlu_high_school_computer_science": null,
    "mmlu_high_school_european_history": null,
    "mmlu_high_school_geography": null,
    "mmlu_high_school_government_and_politics": null,
    "mmlu_high_school_macroeconomics": null,
    "mmlu_high_school_mathematics": null,
    "mmlu_high_school_microeconomics": null,
    "mmlu_high_school_physics": null,
    "mmlu_high_school_psychology": null,
    "mmlu_high_school_statistics": null,
    "mmlu_high_school_us_history": null,
    "mmlu_high_school_world_history": null,
    "mmlu_human_aging": null,
    "mmlu_human_sexuality": null,
    "mmlu_humanities": null,
    "mmlu_international_law": null,
    "mmlu_jurisprudence": null,
    "mmlu_logical_fallacies": null,
    "mmlu_machine_learning": null,
    "mmlu_management": null,
    "mmlu_marketing": null,
    "mmlu_medical_genetics": null,
    "mmlu_miscellaneous": null,
    "mmlu_moral_disputes": null,
    "mmlu_moral_scenarios": null,
    "mmlu_nutrition": null,
    "mmlu_other": null,
    "mmlu_philosophy": null,
    "mmlu_prehistory": null,
    "mmlu_professional_accounting": null,
    "mmlu_professional_law": null,
    "mmlu_professional_medicine": null,
    "mmlu_professional_psychology": null,
    "mmlu_public_relations": null,
    "mmlu_security_studies": null,
    "mmlu_social_sciences": null,
    "mmlu_sociology": null,
    "mmlu_stem": null,
    "mmlu_us_foreign_policy": null,
    "mmlu_virology": null,
    "mmlu_world_religions": null,
    "truthfulqa": 0,
    "truthfulqa_gen": 0,
    "truthfulqa_mc1": 0,
    "truthfulqa_mc2": 0,
    "winogrande": null
  },
  "config": {
    "model": "hf",
    "model_args": "pretrained=meta-llama/Meta-Llama-3-8B,cache_dir=/scratch0/aszablew/raw_models_cache,trust_remote_code=True",
    "batch_size": "auto",
    "batch_sizes": [
      16
    ],
    "device": "cuda",
    "use_cache": "/scratch0/aszablew/Llama3-eval1/.cache/Llama3/cache",
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null
  },
  "git_hash": "1fd62c7",
  "pretty_env_info": "PyTorch version: 2.2.2+cu121\nIs debug build: False\nCUDA used to build PyTorch: 12.1\nROCM used to build PyTorch: N/A\n\nOS: CentOS Linux 7 (Core) (x86_64)\nGCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)\nClang version: Could not collect\nCMake version: version 3.18.4\nLibc version: glibc-2.17\n\nPython version: 3.9.5 (default, May 13 2021, 17:45:13)  [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)] (64-bit runtime)\nPython platform: Linux-3.10.0-1160.114.2.el7.x86_64-x86_64-with-glibc2.17\nIs CUDA available: True\nCUDA runtime version: Could not collect\nCUDA_MODULE_LOADING set to: LAZY\nGPU models and configuration: \nGPU 0: NVIDIA RTX A6000\nGPU 1: NVIDIA RTX A6000\nGPU 2: NVIDIA RTX A6000\nGPU 3: NVIDIA RTX A6000\nGPU 4: NVIDIA RTX A6000\nGPU 5: NVIDIA RTX A6000\nGPU 6: NVIDIA RTX A6000\nGPU 7: NVIDIA RTX A6000\n\nNvidia driver version: 550.54.15\ncuDNN version: Could not collect\nHIP runtime version: N/A\nMIOpen runtime version: N/A\nIs XNNPACK available: True\n\nCPU:\nArchitecture:          x86_64\nCPU op-mode(s):        32-bit, 64-bit\nByte Order:            Little Endian\nCPU(s):                64\nOn-line CPU(s) list:   0-63\nThread(s) per core:    2\nCore(s) per socket:    16\nSocket(s):             2\nNUMA node(s):          2\nVendor ID:             AuthenticAMD\nCPU family:            25\nModel:                 1\nModel name:            AMD EPYC 7313 16-Core Processor\nStepping:              1\nCPU MHz:               1500.000\nCPU max MHz:           3000.0000\nCPU min MHz:           1500.0000\nBogoMIPS:              5988.71\nVirtualization:        AMD-V\nL1d cache:             32K\nL1i cache:             32K\nL2 cache:              512K\nL3 cache:              32768K\nNUMA node0 CPU(s):     0-15,32-47\nNUMA node1 CPU(s):     16-31,48-63\nFlags:                 fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc art rep_good nopl nonstop_tsc extd_apicid aperfmperf eagerfpu pni pclmulqdq monitor ssse3 fma cx16 pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_l2 cpb cat_l3 cdp_l3 invpcid_single hw_pstate sme ssbd rsb_ctxsw ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 erms invpcid cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local clzero irperf xsaveerptr arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold v_vmsave_vmload vgif umip pku ospke vaes vpclmulqdq overflow_recov succor smca\n\nVersions of relevant libraries:\n[pip3] numpy==1.26.4\n[pip3] torch==2.2.2\n[pip3] triton==2.2.0\n[conda] Could not collect",
  "transformers_version": "4.41.2",
  "upper_git_hash": "1fd62c7d9d3476223429528c3c7393e2c03d1122"
}